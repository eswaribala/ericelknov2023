Difference between version no and sequence no

Version No --> Whenever document is updated counter will increase
Seq No--> Whenever any operation happens on index counter will increase

Primary Term--> During Failure Replicaset will primary shard, at that primary term will change


#create index
PUT /products
{
  "settings": {
    "number_of_shards": 2,
    "number_of_replicas": 1
    
  }
}

#retrieve index
GET products

#insert document
POST /products/_doc/1
{
  "productId":100,
  "name":"laptop",
  "cost":45000
}

#retrieve document
GET /products/_doc/1

#replacing the document

POST /products/_doc/1
{
  "productId":100,
  "name":"laptop",
  "cost":45000,
  "expiry-date":"2024-12-12"
}



#delete document
POST /orders/eric/1
{
  "productId":102,
  "name":"laptop-samsung",
  "cost":65000,
  "expiry-date":"2026-12-12"
}

#delete all the documents
DELETE orders
#delete specific document
DELETE orders/eric/1

#update speicific document
PUT products/_doc/1
{
  "productId" : 100,
    "name" : "laptop-mac",
    "cost" : 45000,
    "expiry-date" : "2024-12-12"
}

#alternative approach
POST /products/_doc/1/_update
{
  "doc":{
    "name":"notebook"
  }
}

#alternative approach
POST /products/_update/1
{
  "script":"ctx._source.cost+=1500"
  
}

#updating intermediate computations
POST /products/_doc/1/_update
{
  "script":"ctx._source.cost+=500"
}


POST /products/_update/1
{
  "script":"ctx._source.cost+=Math.random()*100000"
  
}

#remove field using script
POST /customers/_update/1
{
  "script": {
    "source":  "ctx._source.remove('mobileNos');ctx._source.remove('city')"}
 
}

#upsert query
if document 4 exists cost will be updated to 68000 else new document will be created with id 4 and price will be 70000
#use both doc and upsert together
POST /products/_update/4
{
"doc": {
"cost": 68000
},
"upsert": {
"price": 70000
}
}
